name: Build and Release LogParser App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build LogParser app on Windows
        if: matrix.os == 'windows-latest'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx electron-builder --win --publish=never

      - name: Build LogParser app on Linux
        if: matrix.os == 'ubuntu-latest'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx electron-builder --linux --publish=never

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: log-parser-${{ matrix.os }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: log-parser-ubuntu-latest
          path: artifacts

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: log-parser-windows-latest
          path: artifacts

      - name: List all files in artifacts directory
        run: find artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            ## Changes
            - Auto-generated release notes.
          draft: false
          prerelease: false

      - name: Upload Release Asset for Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/*.AppImage
          asset_name: log-parser-linux-${{ github.run_number }}.AppImage
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/*.exe
          asset_name: log-parser-windows-${{ github.run_number }}.exe
          asset_content_type: application/octet-stream
